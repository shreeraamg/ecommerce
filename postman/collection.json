{
  "info": {
    "_postman_id": "ad1a1e87-1309-4253-a6d8-0fe73746a6ad",
    "name": "New Collection",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "28836731"
  },
  "item": [
    {
      "name": "Get all data",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "pm.test(\"Response should be an array\", function () {\r",
              "    pm.expect(pm.response.json()).to.be.an(\"array\");\r",
              "});\r",
              "\r",
              "pm.test(\"Response contains Java 17\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(\"Java 17\");\r",
              "});\r",
              "\r",
              "pm.test(\"Response contains Spring Boot 3\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(\"Spring Boot 3\");\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{BASE_URL}}/api/data",
          "host": ["{{BASE_URL}}"],
          "path": ["api", "data"]
        }
      },
      "response": []
    },
    {
      "name": "Get data by ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {\r",
              "    pm.response.to.have.status(200);\r",
              "});\r",
              "\r",
              "pm.test(\"Response contains Java 17 for ID 1\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(\"Java 17\");\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{BASE_URL}}/api/data/1",
          "host": ["{{BASE_URL}}"],
          "path": ["api", "data", "1"]
        }
      },
      "response": []
    },
    {
      "name": "Get data for Invalid ID",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 404 for invalid ID\", function () {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              "\r",
              "pm.test(\"Error message is 'No Data found with given Id'\", function () {\r",
              "    pm.expect(pm.response.text()).to.include(\"No Data found with given Id\");\r",
              "});\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{BASE_URL}}/api/data/0",
          "host": ["{{BASE_URL}}"],
          "path": ["api", "data", "0"]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "BASE_URL",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}
